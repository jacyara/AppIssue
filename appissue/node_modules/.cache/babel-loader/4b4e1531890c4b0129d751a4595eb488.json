{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar util_1 = require(\"../Calendar/util\");\n\nvar FocusManagerContainer_1 = require(\"../FocusManagerContainer\");\n\nvar Popper_1 = require(\"../Popper\");\n\nvar CalendarPopup_1 = require(\"./CalendarPopup\");\n\nvar DateInput_1 = require(\"./DateInput\");\n\nfunction DatePickerInput(props) {\n  var inputRef = react_1.useRef();\n  var controller = react_1.useRef();\n\n  var setController = function (ctrl) {\n    controller.current = ctrl;\n  };\n\n  var handleDayClick = function (ctrl) {\n    return function (day) {\n      inputRef.current.focus();\n      ctrl.hide();\n      return props.onChange(day);\n    };\n  };\n\n  var handleInputClick = function (ctrl) {\n    return function (e) {\n      ctrl.show();\n      return props.onClick(e);\n    };\n  };\n\n  var handleInputFocus = function (ctrl) {\n    return function (e) {\n      ctrl.show();\n      return props.onFocus(e);\n    };\n  };\n\n  var handleFocusIn = function () {\n    if (controller.current) {\n      controller.current.show();\n    }\n  };\n\n  var handleFocusOut = function () {\n    if (controller.current) {\n      controller.current.hide();\n    }\n  };\n\n  var renderTarget = function (ctrl) {\n    var calendarProps = props.calendarProps,\n        minDate = props.minDate,\n        maxDate = props.maxDate,\n        rest = __rest(props, [\"calendarProps\", \"minDate\", \"maxDate\"]);\n\n    return react_1.default.createElement(DateInput_1.DateInput, __assign({\n      icon: 'calendarOutline',\n      onIconClick: ctrl.show\n    }, rest, {\n      inputRef: inputRef,\n      onClick: handleInputClick(ctrl),\n      onFocus: handleInputFocus(ctrl)\n    }));\n  };\n\n  var value = props.value;\n  return react_1.default.createElement(FocusManagerContainer_1.FocusManagerContainer, {\n    onFocusIn: handleFocusIn,\n    onFocusOut: handleFocusOut\n  }, react_1.default.createElement(Popper_1.Popper, {\n    control: setController,\n    renderTarget: renderTarget,\n    placement: 'bottom-start',\n    block: true\n  }, function (ctrl) {\n    return react_1.default.createElement(CalendarPopup_1.CalendarPopup, __assign({\n      key: value && value.getTime(),\n      initialVisibleDate: value || new Date(),\n      onDayClick: handleDayClick(ctrl),\n      modifiers: {\n        selected: function (day) {\n          return value && util_1.isSameDay(day, value);\n        },\n        disabled: exports.disableByRange(props.minDate, props.maxDate)\n      }\n    }, props.calendarProps));\n  }));\n}\n\nexports.DatePickerInput = DatePickerInput;\nDatePickerInput.defaultProps = {\n  onChange: function () {\n    return null;\n  },\n  onFocus: function () {\n    return null;\n  },\n  onClick: function () {\n    return null;\n  }\n};\n\nexports.disableByRange = function (minDate, maxDate) {\n  var realMinDate = new Date(minDate);\n  realMinDate.setHours(0, 0, 0, 0);\n  var realMaxDate = new Date(maxDate);\n  realMaxDate.setHours(23, 59, 59, 999);\n  return function (day) {\n    return minDate && day < realMinDate || maxDate && day > realMaxDate;\n  };\n};","map":null,"metadata":{},"sourceType":"script"}