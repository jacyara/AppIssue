{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar react_dom_1 = require(\"react-dom\");\n\nvar react_2 = require(\"../../util/react\");\n/**\n * Helper component to allow attaching a ref to a\n * wrapped element to access the underlying DOM element.\n *\n * From Material's UI RootRef component\n */\n\n\nvar RootRef =\n/** @class */\nfunction (_super) {\n  __extends(RootRef, _super);\n\n  function RootRef() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  RootRef.prototype.componentDidMount = function () {\n    this.ref = react_dom_1.findDOMNode(this);\n    react_2.setRef(this.props.rootRef, this.ref);\n  };\n\n  RootRef.prototype.componentDidUpdate = function (prevProps) {\n    var ref = react_dom_1.findDOMNode(this);\n\n    if (prevProps.rootRef !== this.props.rootRef || this.ref !== ref) {\n      if (prevProps.rootRef !== this.props.rootRef) {\n        react_2.setRef(prevProps.rootRef, null);\n      }\n\n      this.ref = ref;\n      react_2.setRef(this.props.rootRef, this.ref);\n    }\n  };\n\n  RootRef.prototype.componentWillUnmount = function () {\n    this.ref = null;\n    react_2.setRef(this.props.rootRef, null);\n  };\n\n  RootRef.prototype.render = function () {\n    return this.props.children;\n  };\n\n  return RootRef;\n}(react_1.default.Component);\n\nexports.RootRef = RootRef;","map":null,"metadata":{},"sourceType":"script"}