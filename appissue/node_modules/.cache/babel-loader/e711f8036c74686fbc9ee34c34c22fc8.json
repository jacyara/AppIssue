{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar react_popper_1 = require(\"react-popper\");\n\nvar styles_1 = require(\"../../styles\");\n\nvar PopperContent_1 = require(\"./PopperContent\");\n\nfunction Popper(props) {\n  var renderTarget = props.renderTarget,\n      children = props.children,\n      style = props.style,\n      block = props.block,\n      rest = __rest(props, [\"renderTarget\", \"children\", \"style\", \"block\"]);\n\n  var _a = react_1.default.useState(props.initialVisible || false),\n      visible = _a[0],\n      setVisible = _a[1];\n\n  var wrapperRef = react_1.default.useRef();\n  var mounting = react_1.default.useRef(true);\n\n  var _b = styles_1.useStyles(function () {\n    return {\n      wrapper: {\n        display: block ? 'block' : 'inline-block'\n      }\n    };\n  }),\n      classes = _b.classes,\n      css = _b.css;\n\n  var toggle = function () {\n    visible ? hide() : show();\n  };\n\n  var show = function () {\n    setVisible(true);\n  };\n\n  var hide = function () {\n    setVisible(false);\n  };\n\n  var isShown = function () {\n    return visible;\n  };\n\n  var controller = {\n    show: show,\n    hide: hide,\n    toggle: toggle,\n    isShown: isShown\n  };\n  react_1.default.useEffect(function () {\n    if (!mounting.current) {\n      if (visible) {\n        props.onShow && props.onShow(controller);\n      } else {\n        props.onHide && props.onHide(controller);\n      }\n    }\n\n    mounting.current = false;\n  }, [visible]);\n  react_1.default.useEffect(function () {\n    var handleClickOutside = function (event) {\n      if (wrapperRef && wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n        if (visible) {\n          hide();\n        }\n      }\n    };\n\n    var handleOnkeypress = function (event) {\n      if (event.key === 'Escape') {\n        hide();\n      }\n    };\n\n    if (props.closeOnOutsideClick) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n\n    document.addEventListener('keydown', handleOnkeypress);\n    props.control(controller);\n    return function () {\n      if (props.closeOnOutsideClick) {\n        document.removeEventListener('mousedown', handleClickOutside);\n      }\n\n      document.removeEventListener('keydown', handleOnkeypress);\n    };\n  }, [visible]);\n  return react_1.default.createElement(\"div\", {\n    ref: wrapperRef,\n    className: css(classes.wrapper, style)\n  }, react_1.default.createElement(react_popper_1.Manager, null, react_1.default.createElement(react_popper_1.Reference, null, function (refProps) {\n    return react_1.default.createElement(\"div\", {\n      ref: refProps.ref,\n      className: css(classes.wrapper)\n    }, renderTarget(controller));\n  }), react_1.default.createElement(PopperContent_1.PopperContent, __assign({\n    show: visible,\n    modifiers: {\n      preventOverflow: {\n        boundariesElement: 'window'\n      }\n    }\n  }, rest), children(controller))));\n}\n\nexports.Popper = Popper;\nPopper.defaultProps = {\n  placement: 'bottom',\n  closeOnOutsideClick: true,\n  offset: 0,\n  block: false,\n  renderTarget: function () {\n    return null;\n  },\n  children: function () {\n    return null;\n  },\n  control: function () {\n    return null;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}