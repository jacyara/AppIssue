{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Observable_1 = require(\"../../../util/Observable\");\n\nvar ModalStore =\n/** @class */\nfunction (_super) {\n  __extends(ModalStore, _super);\n\n  function ModalStore() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.value = {\n      items: []\n    };\n    return _this;\n  }\n\n  ModalStore.prototype.notify = function (value) {\n    if (process.env.NODE_ENV === 'development' && this.listeners.length === 0) {\n      // tslint:disable-next-line no-console\n      console.warn(\"No listeners to the modal store change. \" + \"Maybe you need to include a <ModalMountTarget /> in your application.\");\n    }\n\n    _super.prototype.notify.call(this, value);\n  };\n\n  ModalStore.prototype.append = function (render) {\n    var key = Math.random().toString(36).substring(2);\n    var component = render({\n      dispose: this.dispose(key)\n    });\n    this.value = __assign({}, this.value, {\n      items: this.value.items.concat([{\n        key: key,\n        component: component\n      }])\n    });\n    this.notify(this.value);\n    return key;\n  };\n\n  ModalStore.prototype.dispose = function (key) {\n    var _this = this;\n\n    return function () {\n      _this.value = __assign({}, _this.value, {\n        items: _this.value.items.filter(function (item) {\n          return item.key !== key;\n        })\n      });\n\n      _this.notify(_this.value);\n    };\n  };\n\n  return ModalStore;\n}(Observable_1.Observable);\n\nexports.ModalStore = ModalStore;\nexports.default = new ModalStore();","map":null,"metadata":{},"sourceType":"script"}