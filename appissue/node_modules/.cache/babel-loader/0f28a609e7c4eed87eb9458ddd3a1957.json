{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar useFormControl_1 = require(\"../../../hooks/useFormControl\");\n\nvar styles_1 = require(\"../../../styles\");\n\nvar FormControl_1 = require(\"../../FormControl\");\n\nvar TextField_1 = require(\"../../TextField\");\n\nvar SelectDownshift_1 = require(\"./SelectDownshift\");\n\nvar SelectDownshiftMenu_1 = require(\"./SelectDownshiftMenu\");\n\nfunction SelectSingle(props) {\n  var value = props.value,\n      items = props.items,\n      itemToString = props.itemToString,\n      onChange = props.onChange,\n      isOpen = props.isOpen,\n      onFilterChange = props.onFilterChange,\n      loading = props.loading,\n      renderItem = props.renderItem,\n      components = props.components,\n      style = props.style,\n      label = props.label,\n      error = props.error,\n      rest = __rest(props, [\"value\", \"items\", \"itemToString\", \"onChange\", \"isOpen\", \"onFilterChange\", \"loading\", \"renderItem\", \"components\", \"style\", \"label\", \"error\"]);\n\n  var handleClear = function (downshift) {\n    return function (e) {\n      downshift.clearSelection();\n\n      if (props.onClear) {\n        props.onClear(e);\n      }\n    };\n  };\n\n  var handleInputIconClick = function (_a) {\n    var toggleMenu = _a.toggleMenu;\n    return function () {\n      return toggleMenu();\n    };\n  };\n\n  var handleInputFocus = function (_a) {\n    var openMenu = _a.openMenu;\n    return function () {\n      return openMenu();\n    };\n  };\n\n  var handleInputClick = function (_a) {\n    var openMenu = _a.openMenu;\n    return function () {\n      return openMenu();\n    };\n  };\n\n  var handleInputBlur = function (_a) {\n    var closeMenu = _a.closeMenu;\n    return function (e) {\n      closeMenu();\n      props.onBlur && props.onBlur(e);\n    };\n  };\n\n  var css = styles_1.useStyles().css;\n\n  var _a = useFormControl_1.useFormControl(props),\n      getFormControlProps = _a.getFormControlProps,\n      getFormControlInputProps = _a.getInputProps;\n\n  var formControlProps = getFormControlProps();\n  var inputProps = getFormControlInputProps();\n  var invalid = inputProps['aria-invalid'];\n  return react_1.default.createElement(FormControl_1.FormControl, __assign({}, formControlProps), react_1.default.createElement(SelectDownshift_1.SelectDownshift, {\n    selectedItem: value || null,\n    items: items,\n    itemToString: itemToString,\n    onChange: onChange,\n    isOpen: isOpen,\n    onFilterChange: onFilterChange,\n    labelId: formControlProps.labelId\n  }, function (downshift) {\n    var downshiftOpen = downshift.isOpen,\n        getInputProps = downshift.getInputProps,\n        visibleItems = downshift.visibleItems,\n        inputValue = downshift.inputValue;\n    return react_1.default.createElement(\"div\", {\n      className: css(style)\n    }, react_1.default.createElement(\"div\", null, react_1.default.createElement(TextField_1.TextInput, __assign({\n      icon: isOpen ? 'zoomOutline' : downshiftOpen ? 'angleUp' : 'angleDown'\n    }, rest, {\n      onBlur: handleInputBlur(downshift),\n      onFocus: handleInputFocus(downshift),\n      onClick: handleInputClick(downshift),\n      onClear: handleClear(downshift),\n      onIconClick: handleInputIconClick(downshift)\n    }, getInputProps(), inputProps, {\n      value: inputValue ? inputValue : '',\n      invalid: invalid\n    }))), react_1.default.createElement(SelectDownshiftMenu_1.SelectDownshiftMenu, {\n      downshift: downshift,\n      items: visibleItems,\n      loading: loading,\n      renderItem: renderItem,\n      components: components\n    }));\n  }));\n}\n\nexports.SelectSingle = SelectSingle;","map":null,"metadata":{},"sourceType":"script"}