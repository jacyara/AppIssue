{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar useFormControl_1 = require(\"../../../hooks/useFormControl\");\n\nvar Checkbox_1 = require(\"../../Checkbox/Checkbox\");\n\nvar Flow_1 = require(\"../../Flow\");\n\nvar FormControl_1 = require(\"../../FormControl\");\n\nvar SelectDownshiftMenu_1 = require(\"../SelectSingle/SelectDownshiftMenu\");\n\nvar MultiDownshift_1 = require(\"./MultiDownshift\");\n\nvar SelectMultiInput_1 = require(\"./SelectMultiInput\");\n\nfunction SelectMulti(props) {\n  var _this = this;\n\n  var value = props.value,\n      items = props.items,\n      itemToString = props.itemToString,\n      onChange = props.onChange,\n      isOpen = props.isOpen,\n      itemIsEqual = props.itemIsEqual,\n      onFilterChange = props.onFilterChange,\n      loading = props.loading,\n      externalRenderItem = props.renderItem,\n      components = props.components,\n      placeholder = props.placeholder,\n      label = props.label,\n      error = props.error,\n      rest = __rest(props, [\"value\", \"items\", \"itemToString\", \"onChange\", \"isOpen\", \"itemIsEqual\", \"onFilterChange\", \"loading\", \"renderItem\", \"components\", \"placeholder\", \"label\", \"error\"]);\n\n  var handleItemRemove = function (removeItem) {\n    return function (item) {\n      return removeItem(item);\n    };\n  };\n\n  var renderItem = function (_a) {\n    var isSelected = _a.isSelected;\n    return function (item) {\n      return react_1.default.createElement(Flow_1.HFlow, {\n        hSpacing: 0.5\n      }, react_1.default.createElement(Checkbox_1.Checkbox, {\n        checked: isSelected(item),\n        tabIndex: -1,\n        readOnly: true\n      }), externalRenderItem ? externalRenderItem(item) : itemToString(item));\n    };\n  }; //   const handleInputIconClick = ({ toggleMenu }: MultiSelectRenderProps<T>) => () => toggleMenu()\n\n\n  var handleInputFocus = function (_a) {\n    var openMenu = _a.openMenu;\n    return function () {\n      return openMenu();\n    };\n  };\n\n  var handleInputClick = function (_a) {\n    var openMenu = _a.openMenu;\n    return function () {\n      return openMenu();\n    };\n  };\n\n  var handleInputBlur = function (_a) {\n    var closeMenu = _a.closeMenu;\n    return function (e) {\n      closeMenu();\n      _this.props.onBlur && _this.props.onBlur(e);\n    };\n  };\n\n  var _a = useFormControl_1.useFormControl(props),\n      getFormControlProps = _a.getFormControlProps,\n      getFormControlInputProps = _a.getInputProps;\n\n  var formControlProps = getFormControlProps();\n  var inputProps = getFormControlInputProps();\n  var invalid = inputProps['aria-invalid'];\n  return react_1.default.createElement(FormControl_1.FormControl, __assign({}, formControlProps), react_1.default.createElement(MultiDownshift_1.MultiDownshift, {\n    selectedItems: value || [],\n    items: items,\n    itemToString: itemToString,\n    onChange: onChange,\n    isOpen: isOpen,\n    itemIsEqual: itemIsEqual,\n    onFilterChange: onFilterChange,\n    labelId: formControlProps.labelId\n  }, function (downshift) {\n    var // isOpen,\n    getInputProps = downshift.getInputProps,\n        selectedItems = downshift.selectedItems,\n        removeItem = downshift.removeItem,\n        inputValue = downshift.inputValue,\n        visibleItems = downshift.visibleItems;\n    return react_1.default.createElement(\"div\", null, react_1.default.createElement(SelectMultiInput_1.SelectMultiInput, __assign({\n      items: selectedItems\n    }, rest, {\n      placeholder: !selectedItems || selectedItems.length === 0 ? placeholder : undefined,\n      onBlur: handleInputBlur(downshift),\n      onFocus: handleInputFocus(downshift),\n      onClick: handleInputClick(downshift),\n      onRemoveItem: handleItemRemove(removeItem),\n      renderItem: itemToString\n    }, getInputProps(), inputProps, {\n      value: inputValue ? inputValue : '',\n      invalid: invalid\n    })), react_1.default.createElement(SelectDownshiftMenu_1.SelectDownshiftMenu, {\n      downshift: downshift,\n      items: visibleItems,\n      loading: loading,\n      renderItem: renderItem(downshift)\n    }));\n  }));\n}\n\nexports.SelectMulti = SelectMulti;","map":null,"metadata":{},"sourceType":"script"}