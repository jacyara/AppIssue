"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importStar(require("react"));
var useIsMounted_1 = require("../../../hooks/useIsMounted");
var styles_1 = require("../../../styles");
var ButtonBase_1 = require("../ButtonBase");
var ButtonSkins_1 = require("./ButtonSkins");
function Button(props) {
    var loading = props.loading, block = props.block, style = props.style, skin = props.skin, size = props.size, kind = props.kind, onClick = props.onClick, children = props.children, rest = __rest(props, ["loading", "block", "style", "skin", "size", "kind", "onClick", "children"]);
    var isMounted = useIsMounted_1.useIsMounted();
    var _a = react_1.useState(false), isLoading = _a[0], setIsLoading = _a[1];
    var onLoadingChange = function (value) {
        if (isMounted.current) {
            setIsLoading(value);
        }
    };
    var isReallyLoading = isLoading || loading;
    var _b = styles_1.useStyles(), theme = _b.theme, css = _b.css;
    var skinStyles = ButtonSkins_1.skinMap[skin](theme);
    var sizeStyles = ButtonSkins_1.createSizeStyles(theme);
    var baseStyles = ButtonSkins_1.createBaseStyles(theme);
    var classes = css(baseStyles.button, skinStyles.button, kind === 'primary' && skinStyles.primary, kind === 'danger' && skinStyles.danger, size === 'large' && sizeStyles.large, size === 'medium' && sizeStyles.medium, size === 'small' && sizeStyles.small, isReallyLoading && baseStyles.loading, props.disabled && baseStyles.disabled, block && baseStyles.block, style);
    var handleClick = function (e) {
        if (!isReallyLoading) {
            return onClick && onClick(e);
        }
    };
    return (react_1.default.createElement(ButtonBase_1.ButtonBase, __assign({ className: classes, onLoadingChange: onLoadingChange, "data-loading": isLoading ? true : undefined, onClick: handleClick }, rest),
        react_1.default.createElement("span", null, children)));
}
exports.Button = Button;
Button.defaultProps = {
    kind: 'normal',
    skin: 'default',
    size: 'medium',
    type: 'button',
};
//# sourceMappingURL=Button.js.map