"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var downshift_1 = __importDefault(require("downshift"));
var match_sorter_1 = __importDefault(require("match-sorter"));
var react_1 = __importStar(require("react"));
/**
 * Default filter prop used by the Select component.
 */
function defaultSelectFilter(items, filter, itemToString) {
    return match_sorter_1.default(items, filter, { keys: [itemToString] });
}
exports.defaultSelectFilter = defaultSelectFilter;
/**
 * Downshift extension with item and filter management.
 */
function SelectDownshift(props) {
    var items = props.items, onFilterChange = props.onFilterChange, children = props.children, rest = __rest(props, ["items", "onFilterChange", "children"]);
    var _a = react_1.useState(items), visibleItems = _a[0], setVisibleItems = _a[1];
    react_1.useEffect(function () {
        setVisibleItems(props.items);
    }, [props.items]);
    var handleStateChange = function (options, downshift) {
        if (options.isOpen) {
            onFilterChange(null, getStateAndHelpers(downshift));
        }
        if (options.type === downshift_1.default.stateChangeTypes.changeInput) {
            onFilterChange(options.inputValue, getStateAndHelpers(downshift));
        }
        if (options.type === downshift_1.default.stateChangeTypes.clickItem ||
            options.type === downshift_1.default.stateChangeTypes.keyDownEnter) {
            onFilterChange(null, getStateAndHelpers(downshift));
        }
        props.onStateChange && props.onStateChange(options, getStateAndHelpers(downshift));
    };
    var handleChange = function (item, downshift) {
        props.onChange && props.onChange(item, getStateAndHelpers(downshift));
    };
    var getStateAndHelpers = function (downshift) { return (__assign({}, downshift, { items: items,
        visibleItems: visibleItems,
        setVisibleItems: setVisibleItems })); };
    return (react_1.default.createElement(downshift_1.default, __assign({}, rest, { onStateChange: handleStateChange, onChange: handleChange }), function (downshift) { return children(getStateAndHelpers(downshift)); }));
}
exports.SelectDownshift = SelectDownshift;
SelectDownshift.defaultProps = {
    onFilterChange: function (filter, downshift) {
        var setVisibleItems = downshift.setVisibleItems, items = downshift.items, itemToString = downshift.itemToString;
        setVisibleItems(defaultSelectFilter(items, filter, itemToString));
    },
};
//# sourceMappingURL=SelectDownshift.js.map