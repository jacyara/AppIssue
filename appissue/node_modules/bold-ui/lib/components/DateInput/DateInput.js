"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var createAutoCorrectedDatePipe_1 = __importDefault(require("text-mask-addons/dist/createAutoCorrectedDatePipe"));
var i18n_1 = require("../../i18n");
var MaskedTextField_1 = require("../MaskedTextField");
var formatter = new Intl.DateTimeFormat('pt-br', {
    day: '2-digit',
    month: '2-digit',
    year: 'numeric',
});
function DateInput(props) {
    var value = props.value, onInputChange = props.onInputChange, rest = __rest(props, ["value", "onInputChange"]);
    var locale = i18n_1.useLocale();
    var handleChange = function (e) {
        if (!e || !e.target || !e.target.value) {
            props.onChange(null);
            return;
        }
        var targetValue = e.target.value;
        var match = targetValue.match(/^(\d{2})\/(\d{2})\/(\d{4})$/);
        if (match) {
            var date = new Date(parseInt(match[3], 10), parseInt(match[2], 10) - 1, parseInt(match[1], 10));
            props.onChange(date);
        }
        if (onInputChange) {
            return onInputChange(e);
        }
    };
    return (react_1.default.createElement(MaskedTextField_1.MaskedTextField, __assign({ value: value ? formatter.format(value) : undefined, mask: [/\d/, /\d/, '/', /\d/, /\d/, '/', /\d/, /\d/, /\d/, /\d/], placeholder: locale.dateInput.placeholder, pipe: createAutoCorrectedDatePipe_1.default('dd/mm/yyyy'), autoComplete: 'off' }, rest, { onChange: handleChange })));
}
exports.DateInput = DateInput;
DateInput.defaultProps = {};
//# sourceMappingURL=DateInput.js.map