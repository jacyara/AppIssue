"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importStar(require("react"));
var react_2 = require("../../util/react");
var InputWrapper_1 = require("./InputWrapper");
var TextInputBase_1 = require("./TextInputBase");
function TextInput(props) {
    var icon = props.icon, iconPosition = props.iconPosition, iconDisabled = props.iconDisabled, onIconClick = props.onIconClick, clearable = props.clearable, onClear = props.onClear, inputRef = props.inputRef, rest = __rest(props, ["icon", "iconPosition", "iconDisabled", "onIconClick", "clearable", "onClear", "inputRef"]);
    var internalRef = react_1.useRef(null);
    var handleClear = function () {
        react_2.setNativeValue(internalRef.current, '');
        internalRef.current.dispatchEvent(new Event('input', { bubbles: true }));
        internalRef.current.focus();
    };
    var isIconDisabled = props.iconDisabled !== undefined ? props.iconDisabled : props.disabled;
    var isClearVisible = clearable && (!props.disabled && (!!props.value || !!props.defaultValue));
    return (react_1.default.createElement(InputWrapper_1.InputWrapper, { icon: icon, iconPosition: iconPosition, iconDisabled: isIconDisabled, onIconClick: onIconClick, clearVisible: isClearVisible, onClear: onClear ? onClear : handleClear },
        react_1.default.createElement(TextInputBase_1.TextInputBase, __assign({ inputRef: react_2.composeRefs(internalRef, inputRef) }, rest))));
}
exports.TextInput = TextInput;
TextInput.defaultProps = {
    clearable: true,
};
//# sourceMappingURL=TextInput.js.map