"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var focus_trap_react_1 = __importDefault(require("focus-trap-react"));
var react_1 = __importStar(require("react"));
var styles_1 = require("../../styles");
var Portal_1 = require("../Portal");
var FadeTransition_1 = require("../Transition/FadeTransition");
var ModalBackdrop_1 = require("./ModalBackdrop");
var ModalContainer_1 = require("./ModalContainer");
function Modal(props) {
    var open = props.open, size = props.size, closeOnBackdropClick = props.closeOnBackdropClick, children = props.children, rest = __rest(props, ["open", "size", "closeOnBackdropClick", "children"]);
    var _a = styles_1.useStyles(exports.styles), classes = _a.classes, css = _a.css;
    var sizeClasses = styles_1.useStyles(exports.sizeStyles).classes;
    // Kill body scroll when opened
    react_1.useEffect(function () {
        if (open) {
            document.body.classList.add(classes.bodyWhenOpened);
        }
        else {
            document.body.classList.remove(classes.bodyWhenOpened);
        }
        return function () { return document.body.classList.remove(classes.bodyWhenOpened); };
    }, [open]);
    // Attach "Escape" to close modal
    var handleKeyDown = function (e) {
        if (e.key === 'Escape') {
            props.onClose();
        }
    };
    react_1.useEffect(function () {
        if (open) {
            document.addEventListener('keydown', handleKeyDown);
        }
        else {
            document.removeEventListener('keydown', handleKeyDown);
        }
        return function () { return document.removeEventListener('keydown', handleKeyDown); };
    }, [open]);
    return (react_1.default.createElement(FadeTransition_1.FadeTransition, { in: open }, function (_a) {
        var className = _a.className;
        return (react_1.default.createElement(react_1.default.Fragment, null, open && (react_1.default.createElement(Portal_1.Portal, null,
            react_1.default.createElement(focus_trap_react_1.default, null,
                react_1.default.createElement("div", { className: className },
                    react_1.default.createElement("div", { className: classes.modal },
                        react_1.default.createElement(ModalContainer_1.ModalContainer, __assign({ style: css(classes.container, sizeClasses[size]) }, rest), children)),
                    react_1.default.createElement(ModalBackdrop_1.ModalBackdrop, { onClick: closeOnBackdropClick ? rest.onClose : undefined })))))));
    }));
}
exports.Modal = Modal;
Modal.defaultProps = {
    size: 'large',
    closeOnBackdropClick: true,
};
exports.styles = function (theme) { return ({
    modal: {
        position: 'fixed',
        left: '50%',
        top: '50%',
        transform: 'translate(-50%, -50%)',
        width: '100%',
        pointerEvents: 'none',
        zIndex: theme.zIndex.modalContainer,
        display: 'flex',
        justifyContent: 'center',
    },
    container: {
        maxHeight: '80vh',
        overflow: 'auto',
    },
    bodyWhenOpened: {
        overflow: 'hidden',
    },
}); };
exports.sizeStyles = function () { return ({
    large: { width: 850 },
    small: { width: 520 },
    auto: { maxWidth: '80%' },
}); };
//# sourceMappingURL=Modal.js.map