"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var react_dropzone_1 = require("react-dropzone");
var styles_1 = require("../../styles");
var byte_1 = require("../../util/byte");
var Flow_1 = require("../Flow");
var Icon_1 = require("../Icon/Icon");
var Progress_1 = require("../Progress/Progress");
var Text_1 = require("../Text");
function FileUploader(props) {
    var file = props.file, text = props.text, rest = __rest(props, ["file", "text"]);
    var _a = styles_1.useStyles(exports.createStyles), classes = _a.classes, css = _a.css;
    var _b = react_dropzone_1.useDropzone(rest), getRootProps = _b.getRootProps, getInputProps = _b.getInputProps, isDragActive = _b.isDragActive, isDragAccept = _b.isDragAccept;
    return (react_1.default.createElement("div", __assign({ className: classes.dropzone }, getRootProps()),
        react_1.default.createElement("input", __assign({}, getInputProps())),
        react_1.default.createElement("div", { className: css(classes.wrapper, isDragActive && classes.dragActive) },
            isDragAccept,
            react_1.default.createElement(Flow_1.HFlow, { alignItems: 'center', hSpacing: 0.5 },
                react_1.default.createElement(Icon_1.Icon, { fill: 'secondary', icon: 'upload' }),
                react_1.default.createElement(Text_1.Text, { color: 'secondary', fontSize: 0.875, fontWeight: 'bold' }, text))),
        file && react_1.default.createElement(FileDetails, { file: file })));
}
exports.FileUploader = FileUploader;
function FileDetails(props) {
    var file = props.file;
    var classes = styles_1.useStyles(exports.createStyles).classes;
    var returnExtension = function () {
        var type = file.selectedFile.type;
        var typeSplit = type.split('/');
        if (typeSplit.length > 1) {
            return typeSplit[1];
        }
        else if (!typeSplit[0]) {
            return null;
        }
        else {
            return typeSplit[0];
        }
    };
    return (react_1.default.createElement("div", { className: classes.fileDetailsContainer },
        react_1.default.createElement(FileExtension, { extension: returnExtension() }),
        react_1.default.createElement("div", { className: classes.fileDetails },
            react_1.default.createElement(FileInfo, { file: file }),
            file.uploading && react_1.default.createElement(Progress_1.Progress, { value: file.progress }))));
}
exports.FileDetails = FileDetails;
function FileInfo(props) {
    var file = props.file;
    var classes = styles_1.useStyles(exports.createStyles).classes;
    return (react_1.default.createElement("div", { className: classes.fileInfo },
        !file.error && !file.uploading && (react_1.default.createElement(Icon_1.Icon, { icon: 'checkDefault', fill: 'primary', size: 1, style: { marginRight: 5 } })),
        react_1.default.createElement(Text_1.Text, { fontWeight: 'bold', style: { marginRight: 10 } }, file.selectedFile.name),
        react_1.default.createElement(Text_1.Text, null, byte_1.format(file.selectedFile.size, 0))));
}
exports.FileInfo = FileInfo;
function FileExtension(props) {
    var extension = props.extension;
    var classes = styles_1.useStyles(function (theme) { return ({
        root: {
            backgroundColor: theme.pallete.surface.background,
            border: "1px solid " + theme.pallete.divider,
            padding: '1rem',
        },
    }); }).classes;
    return (react_1.default.createElement(Text_1.Text, { color: 'secondary', style: classes.root, fontWeight: 'bold' }, extension));
}
exports.FileExtension = FileExtension;
exports.createStyles = function (theme) { return ({
    dropzone: {
        backgroundColor: theme.pallete.surface.main,
        borderRadius: theme.radius.paper,
        border: '1px solid ' + theme.pallete.divider,
        cursor: 'pointer',
        padding: '0.25rem',
        transition: 'box-shadow .2s ease',
        '&:focus': {
            outline: 'none',
            boxShadow: styles_1.focusBoxShadow(theme),
        },
    },
    wrapper: {
        display: 'flex',
        alignItems: 'center',
        flexDirection: 'column',
        border: "1px dashed transparent",
        padding: '0.25rem',
    },
    dragActive: {
        borderColor: theme.pallete.divider,
    },
    file: {
        borderTop: '1px solid ' + theme.pallete.divider,
        padding: '1rem',
    },
    fileDetailsContainer: {
        alignItems: 'center',
        borderTop: "1px solid " + theme.pallete.divider,
        display: 'flex',
        padding: '1rem',
    },
    fileDetails: {
        flexGrow: 1,
        marginLeft: '1rem',
    },
    fileInfo: {
        alignItems: 'center',
        display: 'flex',
    },
}); };
//# sourceMappingURL=FileUploader.js.map