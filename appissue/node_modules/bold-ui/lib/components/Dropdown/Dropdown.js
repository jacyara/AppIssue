"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importStar(require("react"));
var usePopper_1 = __importDefault(require("../../hooks/usePopper"));
var styles_1 = require("../../styles");
var string_1 = require("../../util/string");
var Portal_1 = require("../Portal");
var DropdownMenu_1 = require("./DropdownMenu");
function Dropdown(props) {
    var children = props.children, anchorRef = props.anchorRef, popperProps = props.popperProps, open = props.open, onClose = props.onClose, autoclose = props.autoclose, style = props.style, rest = __rest(props, ["children", "anchorRef", "popperProps", "open", "onClose", "autoclose", "style"]);
    var classes = styles_1.useStyles(exports.createStyles).classes;
    var menuRef = react_1.useRef();
    var _a = usePopper_1.default(__assign({ anchorRef: anchorRef, popperRef: menuRef }, popperProps), [open]), popperStyle = _a.style, placement = _a.placement;
    var dropdownIdRef = react_1.default.useRef("dropdown-" + string_1.randomStr());
    // Attaches aria attributes to anchor element
    react_1.useEffect(function () {
        anchorRef.current.setAttribute('aria-haspopup', 'true');
        if (open) {
            anchorRef.current.setAttribute('aria-expanded', 'true');
            anchorRef.current.setAttribute('aria-controls', dropdownIdRef.current);
        }
        else {
            anchorRef.current.removeAttribute('aria-expanded');
            anchorRef.current.removeAttribute('aria-controls');
        }
    }, [open]);
    // Attaches Escape key event
    react_1.useEffect(function () {
        var handleKeyDown = function (e) {
            if (open && e.key === 'Escape') {
                onClose();
            }
        };
        addEventListener('keydown', handleKeyDown);
        return function () { return removeEventListener('keydown', handleKeyDown); };
    }, [open]);
    // When opened, focus the first menu item
    var isFirstRender = react_1.useRef(true);
    react_1.useEffect(function () {
        if (isFirstRender.current) {
            isFirstRender.current = false;
            return;
        }
        if (open) {
            setTimeout(function () {
                // Delay focus to preserve window scroll position
                if (menuRef.current) {
                    var firstItem = menuRef.current.firstElementChild;
                    firstItem.focus();
                }
            });
        }
    }, [open]);
    var handleBlur = function () {
        setTimeout(function () {
            // Call onClose if target focus is outside menu
            if (menuRef.current) {
                var currentFocus = menuRef.current.ownerDocument.activeElement;
                if (!menuRef.current.contains(currentFocus)) {
                    onClose();
                }
            }
        });
    };
    var handleMenuClick = function () {
        if (autoclose) {
            onClose();
        }
    };
    return (open && (react_1.default.createElement(Portal_1.Portal, null,
        react_1.default.createElement(DropdownMenu_1.DropdownMenu, __assign({ id: dropdownIdRef.current, innerRef: menuRef, style: [popperStyle, classes.dropdown, style], "data-placement": placement, onClick: handleMenuClick, onBlur: handleBlur }, rest), children))));
}
exports.Dropdown = Dropdown;
Dropdown.defaultProps = {
    autoclose: true,
    onClose: function () { return null; },
};
exports.createStyles = function (theme) { return ({
    dropdown: {
        zIndex: theme.zIndex.dropdown,
    },
}); };
//# sourceMappingURL=Dropdown.js.map