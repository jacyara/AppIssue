"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var styles_1 = require("../../styles");
function Flow(props) {
    var direction = props.direction, style = props.style;
    var _a = styles_1.useStyles(exports.createStyles, props), classes = _a.classes, css = _a.css;
    var renderChild = function (child) {
        return child && react_1.default.createElement("div", { className: classes.child }, child);
    };
    var className = css(classes.flow, direction === 'horizontal' ? classes.flowHorizontal : classes.flowVertical, style);
    return react_1.default.createElement("div", { className: className }, react_1.default.Children.map(props.children, function (child) { return renderChild(child); }));
}
exports.Flow = Flow;
Flow.defaultProps = {
    direction: 'horizontal',
    vSpacing: 0,
    hSpacing: 1,
};
exports.createStyles = function (theme, _a) {
    var alignItems = _a.alignItems, justifyContent = _a.justifyContent, direction = _a.direction, vSpacing = _a.vSpacing, hSpacing = _a.hSpacing;
    return ({
        flow: {
            display: 'flex',
            alignItems: alignItems,
            justifyContent: justifyContent,
        },
        flowHorizontal: {},
        flowVertical: {
            flexDirection: 'column',
        },
        child: {
            marginBottom: vSpacing / 2 + "rem",
            marginTop: vSpacing / 2 + "rem",
            marginLeft: hSpacing / 2 + "rem",
            marginRight: hSpacing / 2 + "rem",
            display: 'inline-block',
            ':first-of-type': {
                marginTop: direction === 'vertical' && 0,
                marginLeft: direction === 'horizontal' && 0,
            },
            ':last-of-type': {
                marginBottom: direction === 'vertical' && 0,
                marginRight: direction === 'horizontal' && 0,
            },
            ':empty': {
                display: 'none',
            },
        },
    });
};
//# sourceMappingURL=Flow.js.map