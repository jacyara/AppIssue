"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var react_popper_1 = require("react-popper");
var styles_1 = require("../../styles");
var PopperContent_1 = require("./PopperContent");
function Popper(props) {
    var renderTarget = props.renderTarget, children = props.children, style = props.style, block = props.block, rest = __rest(props, ["renderTarget", "children", "style", "block"]);
    var _a = react_1.default.useState(props.initialVisible || false), visible = _a[0], setVisible = _a[1];
    var wrapperRef = react_1.default.useRef();
    var mounting = react_1.default.useRef(true);
    var _b = styles_1.useStyles(function () { return ({
        wrapper: {
            display: block ? 'block' : 'inline-block',
        },
    }); }), classes = _b.classes, css = _b.css;
    var toggle = function () {
        visible ? hide() : show();
    };
    var show = function () {
        setVisible(true);
    };
    var hide = function () {
        setVisible(false);
    };
    var isShown = function () {
        return visible;
    };
    var controller = {
        show: show,
        hide: hide,
        toggle: toggle,
        isShown: isShown,
    };
    react_1.default.useEffect(function () {
        if (!mounting.current) {
            if (visible) {
                props.onShow && props.onShow(controller);
            }
            else {
                props.onHide && props.onHide(controller);
            }
        }
        mounting.current = false;
    }, [visible]);
    react_1.default.useEffect(function () {
        var handleClickOutside = function (event) {
            if (wrapperRef && wrapperRef.current && !wrapperRef.current.contains(event.target)) {
                if (visible) {
                    hide();
                }
            }
        };
        var handleOnkeypress = function (event) {
            if (event.key === 'Escape') {
                hide();
            }
        };
        if (props.closeOnOutsideClick) {
            document.addEventListener('mousedown', handleClickOutside);
        }
        document.addEventListener('keydown', handleOnkeypress);
        props.control(controller);
        return function () {
            if (props.closeOnOutsideClick) {
                document.removeEventListener('mousedown', handleClickOutside);
            }
            document.removeEventListener('keydown', handleOnkeypress);
        };
    }, [visible]);
    return (react_1.default.createElement("div", { ref: wrapperRef, className: css(classes.wrapper, style) },
        react_1.default.createElement(react_popper_1.Manager, null,
            react_1.default.createElement(react_popper_1.Reference, null, function (refProps) { return (react_1.default.createElement("div", { ref: refProps.ref, className: css(classes.wrapper) }, renderTarget(controller))); }),
            react_1.default.createElement(PopperContent_1.PopperContent, __assign({ show: visible, modifiers: {
                    preventOverflow: {
                        boundariesElement: 'window',
                    },
                } }, rest), children(controller)))));
}
exports.Popper = Popper;
Popper.defaultProps = {
    placement: 'bottom',
    closeOnOutsideClick: true,
    offset: 0,
    block: false,
    renderTarget: function () { return null; },
    children: function () { return null; },
    control: function () { return null; },
};
//# sourceMappingURL=Popper.js.map