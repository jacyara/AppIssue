{"version":3,"sources":["views/Colunas.tsx","views/Equipes.tsx","index.js","views/App.tsx"],"names":["Colunas","props","useState","coluna","setColuna","console","log","useEffect","axios","get","params","id","projeto","then","resp","data","result","rows","columns","name","render","item","nome","Equipes","projetos","setProjetos","statusSelecionado","setstatusSelecionado","res","items","onChange","itemToString","clearable","ReactDOM","document","querySelector"],"mappings":"6OA0CeA,EA7BQ,SAACC,GAAwB,IAAD,EACjBC,qBADiB,mBACtCC,EADsC,KAC9BC,EAD8B,KAY7C,OATAC,QAAQC,IAAI,YAAaL,GAEzBM,qBAAU,WACRC,IAAMC,IAAI,OAAQ,CAAEC,OAAQ,CAAEC,GAAIV,EAAMW,QAAQD,MAAQE,MAAK,SAAAC,GAC3DT,QAAQC,IAAI,OAAQQ,EAAKC,KAAKC,OAAOC,MACrCb,EAAUU,EAAKC,KAAKC,OAAOC,WAE5B,CAAChB,EAAMW,UAELX,GAAUE,GAAWA,EAAO,IAIjCE,QAAQC,IAAI,UAAWH,GAErB,kBAAC,YAAD,CACEc,KAAMd,EACNe,QAAS,CAAC,CAAEC,KAAM,SAAUC,OAAQ,SAAAC,GAAI,OAAIA,EAAKC,WAP5C,MChBI,SAASC,IAAW,IAAD,EACArB,qBADA,mBACzBsB,EADyB,KACfC,EADe,OAEkBvB,qBAFlB,mBAEzBwB,EAFyB,KAENC,EAFM,KAYhC,GARApB,qBAAU,WACRC,IAAMC,IAAI,QAAQI,MAAK,SAAAC,GACrBW,EAAYX,EAAKC,KAAKa,IAAIX,WAE3B,IAEHZ,QAAQC,IAAIkB,IAEPA,EACH,OAAO,KAcT,OACE,oCACE,kBAAC,QAAD,KACE,kBAAC,SAAD,CACEK,MAAOL,EACPM,SAXe,SAACT,GAEtBM,EAAqBN,IAUfU,aAhBa,SAACV,GACpB,OAAKA,EACEA,EAAKC,KADM,IAgBZH,KAAK,UACLa,WAAW,IAEZN,GAAqB,kBAAC,EAAD,CAASd,QAASc,MC3ChDO,IAASb,OAAO,mBCDD,WACb,OACE,oCACE,kBAACG,EAAD,SDFU,MAASW,SAASC,cAAc,Y","file":"static/js/main.da8c96fa.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { DataTable } from \"bold-ui\";\nimport React, { useEffect, useState } from \"react\";\nimport { Projeto } from \"./Equipes\";\n\ntype Coluna = {\n  nome: string;\n};\n\ninterface ColunaProps {\n  projeto: Projeto;\n}\n\nexport const Colunas = (props: ColunaProps) => {\n  const [coluna, setColuna] = useState<Coluna[]>();\n\n  console.log(\"Projeto: \", props);\n\n  useEffect(() => {\n    axios.get(\"/col\", { params: { id: props.projeto.id } }).then(resp => {\n      console.log(\"resp\", resp.data.result.rows);\n      setColuna(resp.data.result.rows);\n    });\n  }, [props.projeto]);\n\n  if (!props || !coluna || !coluna[0]) {\n    return null;\n  }\n\n  console.log(\"colunas\", coluna);\n  return (\n    <DataTable<Coluna>\n      rows={coluna}\n      columns={[{ name: \"equipe\", render: item => item.nome }]}\n    />\n\n    // <>\n    //   <Button>{coluna[2].nome}</Button>\n    // </>\n  );\n};\n\nexport default Colunas;\n","import axios from \"axios\";\nimport { Select, VFlow } from \"bold-ui\";\nimport React, { useEffect, useState } from \"react\";\nimport Colunas from \"./Colunas\";\n\nexport type Projeto = {\n  id: string;\n  nome: string;\n};\n\nexport default function Equipes() {\n  const [projetos, setProjetos] = useState<Projeto[]>();\n  const [statusSelecionado, setstatusSelecionado] = useState<Projeto>();\n\n  useEffect(() => {\n    axios.get(\"/kkk\").then(resp => {\n      setProjetos(resp.data.res.rows);\n    });\n  }, []);\n\n  console.log(projetos);\n\n  if (!projetos) {\n    return null;\n  }\n\n  //console.log(\"Projetos \" + projetos.map(item => item.nome || null));\n  const itemToString = (item: Projeto | null) => {\n    if (!item) return \"\";\n    return item.nome;\n  };\n  const handleOnChange = (item: Projeto) => {\n    //console.log(\"handle\", item);\n    setstatusSelecionado(item);\n  };\n\n  //console.log(\"selectionado\", statusSelecionado);\n  return (\n    <>\n      <VFlow>\n        <Select<Projeto>\n          items={projetos}\n          onChange={handleOnChange}\n          itemToString={itemToString}\n          name=\"equipes\"\n          clearable={false}\n        />\n        {statusSelecionado && <Colunas projeto={statusSelecionado} />}\n      </VFlow>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./views/App.tsx\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n","import React from \"react\";\nimport Equipes from \"./Equipes\";\n\nexport default function App() {\n  return (\n    <>\n      <Equipes />\n    </>\n  );\n}\n"],"sourceRoot":""}