{"version":3,"sources":["views/DateTime.tsx","views/Abertas.tsx","views/Fechadas.tsx","views/Colunas.tsx","views/Equipes.tsx","index.js","views/App.tsx"],"names":["DateTime","props","value","format","mom","moment","isValid","defaultProps","Abertas","useState","abertas","setAbertas","useEffect","axios","get","params","id","projeto","then","resp","console","log","data","result","rows","columns","name","header","render","item","nome","created","Fechadas","fechadas","setFechadas","row","date1","aberta","date2","fechada","days","duration","diff","asDays","Colunas","coluna","setColuna","icp","setIcp","c","forEach","index","a","countIssue","col","filter","x","length","count","issues","Map","map","set","renderIssue","Equipes","projetos","setProjetos","statusSelecionado","setstatusSelecionado","res","items","onChange","itemToString","clearable","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.c4e104fe.chunk.js","sourcesContent":["import moment from \"moment\";\nimport React from \"react\";\n\nexport interface DateTimeProps {\n  value: moment.Moment | string | number | Date;\n  format?: string;\n}\n\nexport function DateTime(props: DateTimeProps) {\n  const { value, format } = props;\n\n  const mom = moment(value);\n\n  if (!mom.isValid()) {\n    return null;\n  }\n\n  return <time>{mom.format(format)}</time>;\n}\n\nDateTime.defaultProps = {\n  format: \"DD/MM/YYYY [às] HH:mm\"\n} as Partial<DateTimeProps>;\n","import axios from \"axios\";\nimport { DataTable } from \"bold-ui\";\nimport React, { useEffect, useState } from \"react\";\nimport { DateTime } from \"./DateTime\";\nimport { Projeto } from \"./Equipes\";\n\ntype Abertas = {\n  id: number;\n  nome: string;\n  created: Date;\n};\ninterface AbertasProps {\n  projeto: Projeto;\n}\n\nexport const Abertas = (props: AbertasProps) => {\n  const [abertas, setAbertas] = useState<Abertas[]>();\n\n  useEffect(() => {\n    axios.get(\"/abertas\", { params: { id: props.projeto.id } }).then(resp => {\n      console.log(\"abertas: \", resp.data.result.rows);\n      setAbertas(resp.data.result.rows);\n    });\n  }, [props.projeto]);\n\n  if (!props || !abertas) {\n    return null;\n  }\n\n  return (\n    <DataTable<Abertas>\n      rows={abertas}\n      columns={[\n        {\n          name: \"issue\",\n          header: \"#Issue\",\n          render: item => item.id\n        },\n        {\n          name: \"nome\",\n          header: \"Título da Issue\",\n          render: item => item.nome\n        },\n        {\n          name: \"nome\",\n          header: \"Data de criação\",\n          render: item => <DateTime value={item.created} format=\"DD/MM/YYYY\" />\n        }\n      ]}\n    />\n  );\n};\n","import axios from \"axios\";\nimport { DataTable } from \"bold-ui\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport { Projeto } from \"./Equipes\";\n\ntype Fechadas = {\n  id: number;\n  nome: string;\n  fechada: Date;\n  aberta: Date;\n};\ninterface FechadaProps {\n  projeto: Projeto;\n}\n\nexport const Fechadas = (props: FechadaProps) => {\n  const [fechadas, setFechadas] = useState<Fechadas[]>();\n\n  useEffect(() => {\n    axios.get(\"/fechadas\", { params: { id: props.projeto.id } }).then(resp => {\n      console.log(\"fechadas: \", resp.data.result.rows);\n      setFechadas(resp.data.result.rows);\n    });\n  }, [props.projeto]);\n\n  if (!props || !fechadas) {\n    return null;\n  }\n\n  const renderLeadTime = (row: Fechadas) => {\n    const date1 = moment(row.aberta, \"\");\n    const date2 = moment(row.fechada);\n    const diferenca = moment.duration(date2.diff(date1));\n    const days = diferenca.asDays();\n    return <span>{days}</span>;\n  };\n\n  return (\n    <>\n      <h2>Issues fechadas</h2>\n      <DataTable<Fechadas>\n        rows={fechadas}\n        columns={[\n          {\n            name: \"issue\",\n            header: \"#Issue\",\n            render: item => item.id\n          },\n          {\n            name: \"nome\",\n            header: \"Título da Issue\",\n            render: item => item.nome\n          },\n          {\n            name: \"nome\",\n            header: \"Lead Time\",\n            render: renderLeadTime\n          }\n        ]}\n      />\n    </>\n  );\n};\n","import axios from \"axios\";\nimport { DataTable } from \"bold-ui\";\nimport { TableColumnConfig } from \"bold-ui/lib/components/Table/DataTable/DataTable\";\nimport React, { useEffect, useState } from \"react\";\nimport { Abertas } from \"./Abertas\";\nimport { Projeto } from \"./Equipes\";\nimport { Fechadas } from \"./Fechadas\";\n\ntype Coluna = {\n  nome: string;\n};\n\ntype Icp = {\n  coluna: string;\n  count: number;\n};\n\ninterface ColunaProps {\n  projeto: Projeto;\n}\n\nexport const Colunas = (props: ColunaProps) => {\n  const [coluna, setColuna] = useState<Coluna[]>();\n\n  const [icp, setIcp] = useState<Icp[]>();\n\n  useEffect(() => {\n    axios.get(\"/col\", { params: { id: props.projeto.id } }).then(resp => {\n      console.log(\"resp\", resp.data.result.rows);\n      setColuna(resp.data.result.rows);\n    });\n    axios.get(\"/ipc\", { params: { id: props.projeto.id } }).then(resp => {\n      console.log(\"ipc: \", resp.data.result.rows);\n      setIcp(resp.data.result.rows);\n    });\n  }, [props.projeto]);\n\n  if (!props || !coluna || !coluna[0] || !icp) {\n    return null;\n  }\n\n  let c: [TableColumnConfig] = [\n    {\n      name: \"\",\n      header: \"\",\n      render: () => <span></span>\n    }\n  ];\n  coluna.forEach(\n    (item, index) =>\n      (c[index] = {\n        name: item.nome,\n        header: item.nome,\n        render: a => <span>{a.get(item.nome)}</span>\n      })\n  );\n\n  const renderIssue = () => {\n    let issues = new Map();\n    coluna.map(item => issues.set(item.nome, countIssue(item.nome)));\n    console.log(issues);\n    return issues;\n  };\n\n  const countIssue = (name: string) => {\n    var col = icp.filter(x => x.coluna === name);\n    if (col.length === 0) {\n      return 0;\n    }\n    return col[0].count;\n  };\n\n  return (\n    <>\n      <DataTable rows={[renderIssue()]} columns={c} />\n      <h2>Issues abertas!</h2>\n\n      <Abertas projeto={props.projeto} />\n      <Fechadas projeto={props.projeto} />\n    </>\n  );\n};\n\nexport default Colunas;\n","import axios from \"axios\";\nimport { Select, VFlow } from \"bold-ui\";\nimport React, { useEffect, useState } from \"react\";\nimport Colunas from \"./Colunas\";\n\nexport type Projeto = {\n  id: string;\n  nome: string;\n};\n\nexport default function Equipes() {\n  const [projetos, setProjetos] = useState<Projeto[]>();\n  const [statusSelecionado, setstatusSelecionado] = useState<Projeto>();\n\n  useEffect(() => {\n    axios.get(\"/kkk\").then(resp => {\n      setProjetos(resp.data.res.rows);\n    });\n  }, []);\n\n  console.log(projetos);\n\n  if (!projetos) {\n    return null;\n  }\n\n  //console.log(\"Projetos \" + projetos.map(item => item.nome || null));\n  const itemToString = (item: Projeto | null) => {\n    if (!item) return \"\";\n    return item.nome;\n  };\n  const handleOnChange = (item: Projeto) => {\n    //console.log(\"handle\", item);\n    setstatusSelecionado(item);\n  };\n\n  //console.log(\"selectionado\", statusSelecionado);\n  return (\n    <>\n      <VFlow>\n        <Select<Projeto>\n          items={projetos}\n          onChange={handleOnChange}\n          itemToString={itemToString}\n          name=\"equipes\"\n          clearable={false}\n        />\n        {statusSelecionado && <Colunas projeto={statusSelecionado} />}\n      </VFlow>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./views/App.tsx\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n","import React from \"react\";\nimport Equipes from \"./Equipes\";\n\nexport default function App() {\n  return (\n    <>\n      <Equipes />\n    </>\n  );\n}\n"],"sourceRoot":""}