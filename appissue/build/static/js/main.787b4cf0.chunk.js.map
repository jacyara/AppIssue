{"version":3,"sources":["views/Colunas.tsx","views/Equipes.tsx","index.js","views/App.tsx"],"names":["Colunas","props","useState","coluna","setColuna","icp","setIcp","abertas","setAbertas","console","log","useEffect","axios","get","params","id","projeto","then","resp","data","result","rows","c","name","header","render","forEach","item","index","nome","a","countIssue","col","filter","x","length","count","issues","Map","map","set","renderIssue","columns","created","Equipes","projetos","setProjetos","statusSelecionado","setstatusSelecionado","res","items","onChange","itemToString","clearable","ReactDOM","document","querySelector"],"mappings":"6OA4HeA,EAnGQ,SAACC,GAAwB,IAAD,EACjBC,qBADiB,mBACtCC,EADsC,KAC9BC,EAD8B,OAGvBF,qBAHuB,mBAGtCG,EAHsC,KAGjCC,EAHiC,OAKfJ,qBALe,mBAKtCK,EALsC,KAK7BC,EAL6B,KAuB7C,GAjBAC,QAAQC,IAAI,YAAaT,GAEzBU,qBAAU,WACRC,IAAMC,IAAI,OAAQ,CAAEC,OAAQ,CAAEC,GAAId,EAAMe,QAAQD,MAAQE,MAAK,SAAAC,GAC3DT,QAAQC,IAAI,OAAQQ,EAAKC,KAAKC,OAAOC,MACrCjB,EAAUc,EAAKC,KAAKC,OAAOC,SAE7BT,IAAMC,IAAI,OAAQ,CAAEC,OAAQ,CAAEC,GAAId,EAAMe,QAAQD,MAAQE,MAAK,SAAAC,GAC3DT,QAAQC,IAAI,QAASQ,EAAKC,KAAKC,OAAOC,MACtCf,EAAOY,EAAKC,KAAKC,OAAOC,SAE1BT,IAAMC,IAAI,WAAY,CAAEC,OAAQ,CAAEC,GAAId,EAAMe,QAAQD,MAAQE,MAAK,SAAAC,GAC/DT,QAAQC,IAAI,YAAaQ,EAAKC,KAAKC,OAAOC,MAC1Cb,EAAWU,EAAKC,KAAKC,OAAOC,WAE7B,CAACpB,EAAMe,WAELf,IAAUE,IAAWA,EAAO,KAAOE,IAAQE,EAC9C,OAAO,KAWT,IAAIe,EAAyB,CAC3B,CACEC,KAAM,GACNC,OAAQ,GACRC,OAAQ,kBAAM,kCAGlBtB,EAAOuB,SACL,SAACC,EAAMC,GAAP,OACGN,EAAEM,GAAS,CACVL,KAAMI,EAAKE,KACXL,OAAQG,EAAKE,KACbJ,OAAQ,SAAAK,GAAC,OAAI,8BAAOA,EAAEjB,IAAIc,EAAKE,YAIrC,IAOME,EAAa,SAACR,GAClB,IAAIS,EAAM3B,EAAI4B,QAAO,SAAAC,GAAC,OAAIA,EAAE/B,SAAWoB,KACvC,OAAmB,IAAfS,EAAIG,OACC,EAEFH,EAAI,GAAGI,OAGhB,OACE,oCACE,kBAAC,YAAD,CAAWf,KAAM,CAjBD,WAClB,IAAIgB,EAAS,IAAIC,IAGjB,OAFAnC,EAAOoC,KAAI,SAAAZ,GAAI,OAAIU,EAAOG,IAAIb,EAAKE,KAAME,EAAWJ,EAAKE,UACzDpB,QAAQC,IAAI2B,GACLA,EAaaI,IAAgBC,QAASpB,IAE3C,+CAEA,kBAAC,YAAD,CACED,KAAMd,EACNmC,QAAS,CACP,CACEnB,KAAM,QACNC,OAAQ,SACRC,OAAQ,SAAAE,GAAI,OAAIA,EAAKZ,KAEvB,CACEQ,KAAM,OACNC,OAAQ,qBACRC,OAAQ,SAAAE,GAAI,OAAIA,EAAKE,OAEvB,CACEN,KAAM,OACNC,OAAQ,wBACRC,OAAQ,SAAAE,GAAI,OAAIA,EAAKgB,eCvGlB,SAASC,IAAW,IAAD,EACA1C,qBADA,mBACzB2C,EADyB,KACfC,EADe,OAEkB5C,qBAFlB,mBAEzB6C,EAFyB,KAENC,EAFM,KAYhC,GARArC,qBAAU,WACRC,IAAMC,IAAI,QAAQI,MAAK,SAAAC,GACrB4B,EAAY5B,EAAKC,KAAK8B,IAAI5B,WAE3B,IAEHZ,QAAQC,IAAImC,IAEPA,EACH,OAAO,KAcT,OACE,oCACE,kBAAC,QAAD,KACE,kBAAC,SAAD,CACEK,MAAOL,EACPM,SAXe,SAACxB,GAEtBqB,EAAqBrB,IAUfyB,aAhBa,SAACzB,GACpB,OAAKA,EACEA,EAAKE,KADM,IAgBZN,KAAK,UACL8B,WAAW,IAEZN,GAAqB,kBAAC,EAAD,CAAS/B,QAAS+B,MC3ChDO,IAAS7B,OAAO,mBCDD,WACb,OACE,oCACE,kBAACmB,EAAD,SDFU,MAASW,SAASC,cAAc,Y","file":"static/js/main.787b4cf0.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { DataTable } from \"bold-ui\";\nimport { TableColumnConfig } from \"bold-ui/lib/components/Table/DataTable/DataTable\";\nimport React, { useEffect, useState } from \"react\";\nimport { Projeto } from \"./Equipes\";\n\ntype Coluna = {\n  nome: string;\n};\n\ntype Icp = {\n  coluna: string;\n  count: number;\n};\n\ntype Abertas = {\n  id: number;\n  nome: string;\n  created: Date;\n};\n\ninterface ColunaProps {\n  projeto: Projeto;\n}\n\nexport const Colunas = (props: ColunaProps) => {\n  const [coluna, setColuna] = useState<Coluna[]>();\n\n  const [icp, setIcp] = useState<Icp[]>();\n\n  const [abertas, setAbertas] = useState<Abertas[]>();\n  console.log(\"Projeto: \", props);\n\n  useEffect(() => {\n    axios.get(\"/col\", { params: { id: props.projeto.id } }).then(resp => {\n      console.log(\"resp\", resp.data.result.rows);\n      setColuna(resp.data.result.rows);\n    });\n    axios.get(\"/ipc\", { params: { id: props.projeto.id } }).then(resp => {\n      console.log(\"ipc: \", resp.data.result.rows);\n      setIcp(resp.data.result.rows);\n    });\n    axios.get(\"/abertas\", { params: { id: props.projeto.id } }).then(resp => {\n      console.log(\"abertas: \", resp.data.result.rows);\n      setAbertas(resp.data.result.rows);\n    });\n  }, [props.projeto]);\n\n  if (!props || !coluna || !coluna[0] || !icp || !abertas) {\n    return null;\n  }\n\n  //icp.map(item => console.log(item.coluna + \" \" + item.count));\n\n  // const renderNome = (row: Coluna) => {\n  //   icp.map(item => if(item.coluna === row.nome){\n  //     <span>{row.nome}</span>} );\n\n  // }\n\n  let c: [TableColumnConfig] = [\n    {\n      name: \"\",\n      header: \"\",\n      render: () => <span></span>\n    }\n  ];\n  coluna.forEach(\n    (item, index) =>\n      (c[index] = {\n        name: item.nome,\n        header: item.nome,\n        render: a => <span>{a.get(item.nome)}</span>\n      })\n  );\n\n  const renderIssue = () => {\n    let issues = new Map();\n    coluna.map(item => issues.set(item.nome, countIssue(item.nome)));\n    console.log(issues);\n    return issues;\n  };\n\n  const countIssue = (name: string) => {\n    var col = icp.filter(x => x.coluna === name);\n    if (col.length === 0) {\n      return 0;\n    }\n    return col[0].count;\n  };\n\n  return (\n    <>\n      <DataTable rows={[renderIssue()]} columns={c} />\n\n      <h2>Issues abertas!</h2>\n\n      <DataTable<Abertas>\n        rows={abertas}\n        columns={[\n          {\n            name: \"issue\",\n            header: \"#Issue\",\n            render: item => item.id\n          },\n          {\n            name: \"nome\",\n            header: \"Título da Issue\",\n            render: item => item.nome\n          },\n          {\n            name: \"nome\",\n            header: \"Data de criação\",\n            render: item => item.created\n          }\n        ]}\n      />\n    </>\n    // <>\n    //   <Button>{coluna[2].nome}</Button>\n    // </>\n  );\n};\n\nexport default Colunas;\n","import axios from \"axios\";\nimport { Select, VFlow } from \"bold-ui\";\nimport React, { useEffect, useState } from \"react\";\nimport Colunas from \"./Colunas\";\n\nexport type Projeto = {\n  id: string;\n  nome: string;\n};\n\nexport default function Equipes() {\n  const [projetos, setProjetos] = useState<Projeto[]>();\n  const [statusSelecionado, setstatusSelecionado] = useState<Projeto>();\n\n  useEffect(() => {\n    axios.get(\"/kkk\").then(resp => {\n      setProjetos(resp.data.res.rows);\n    });\n  }, []);\n\n  console.log(projetos);\n\n  if (!projetos) {\n    return null;\n  }\n\n  //console.log(\"Projetos \" + projetos.map(item => item.nome || null));\n  const itemToString = (item: Projeto | null) => {\n    if (!item) return \"\";\n    return item.nome;\n  };\n  const handleOnChange = (item: Projeto) => {\n    //console.log(\"handle\", item);\n    setstatusSelecionado(item);\n  };\n\n  //console.log(\"selectionado\", statusSelecionado);\n  return (\n    <>\n      <VFlow>\n        <Select<Projeto>\n          items={projetos}\n          onChange={handleOnChange}\n          itemToString={itemToString}\n          name=\"equipes\"\n          clearable={false}\n        />\n        {statusSelecionado && <Colunas projeto={statusSelecionado} />}\n      </VFlow>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./views/App.tsx\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n","import React from \"react\";\nimport Equipes from \"./Equipes\";\n\nexport default function App() {\n  return (\n    <>\n      <Equipes />\n    </>\n  );\n}\n"],"sourceRoot":""}