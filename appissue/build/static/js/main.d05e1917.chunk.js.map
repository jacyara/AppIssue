{"version":3,"sources":["views/DateTime.tsx","views/Abertas.tsx","views/Fechadas.tsx","views/Colunas.tsx","views/Equipes.tsx","views/Header.tsx","index.js","views/App.tsx"],"names":["DateTime","props","value","format","mom","moment","isValid","defaultProps","Abertas","useState","abertas","setAbertas","classes","useStyles","createStyles","useEffect","axios","get","params","id","projeto","then","resp","console","log","data","result","rows","alignItems","size","className","container","columns","name","header","render","item","nome","created","row","date1","date2","Date","days","duration","diff","asDays","Math","round","theme","textAlign","fontSize","lineHeight","Fechadas","fechadas","setFechadas","aberta","fechada","Colunas","coluna","setColuna","icp","setIcp","dataInicio","dataFim","periodo","setPeriodo","c","a","forEach","index","countIssue","col","filter","x","length","count","label","onChange","selectedDate","Intl","DateTimeFormat","day","month","year","issues","Map","map","set","renderIssue","Equipes","projetos","setProjetos","statusSelecionado","setstatusSelecionado","res","items","itemToString","clearable","Header","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.d05e1917.chunk.js","sourcesContent":["import moment from \"moment\";\nimport React from \"react\";\n\nexport interface DateTimeProps {\n  value: moment.Moment | string | number | Date;\n  format?: string;\n}\n\nexport function DateTime(props: DateTimeProps) {\n  const { value, format } = props;\n\n  const mom = moment(value);\n\n  if (!mom.isValid()) {\n    return null;\n  }\n\n  return <time>{mom.format(format)}</time>;\n}\n\nDateTime.defaultProps = {\n  format: \"DD/MM/YYYY [às] HH:mm\"\n} as Partial<DateTimeProps>;\n","import axios from \"axios\";\nimport { Cell, DataTable, Grid, Theme, useStyles, VFlow } from \"bold-ui\";\nimport moment from \"moment\";\nimport React, { CSSProperties, useEffect, useState } from \"react\";\nimport { DateTime } from \"./DateTime\";\nimport { Projeto } from \"./Equipes\";\n\ntype Abertas = {\n  id: number;\n  nome: string;\n  created: Date;\n};\ninterface AbertasProps {\n  projeto: Projeto;\n}\n\nexport const Abertas = (props: AbertasProps) => {\n  const [abertas, setAbertas] = useState<Abertas[]>();\n  const { classes } = useStyles(createStyles);\n\n  useEffect(() => {\n    axios.get(\"/abertas\", { params: { id: props.projeto.id } }).then(resp => {\n      console.log(\"abertas: \", resp.data.result.rows);\n      setAbertas(resp.data.result.rows);\n    });\n  }, [props.projeto]);\n\n  if (!props || !abertas) {\n    return null;\n  }\n\n  const renderLeadTime = (row: Abertas) => {\n    const date1 = moment(row.created);\n    const date2 = moment(new Date());\n    const diferenca = moment.duration(date2.diff(date1));\n    const days = diferenca.asDays();\n    return <span>{Math.round(days)}</span>;\n  };\n\n  return (\n    <>\n      <Grid alignItems=\"center\">\n        <Cell size={2} />\n        <Cell size={8}>\n          <VFlow>\n            <h2 className={classes.container}>Issues abertas!</h2>\n            <DataTable<Abertas>\n              rows={abertas}\n              columns={[\n                {\n                  name: \"issue\",\n                  header: \"#Issue\",\n                  render: item => item.id\n                },\n                {\n                  name: \"nome\",\n                  header: \"Título da Issue\",\n                  render: item => item.nome\n                },\n                {\n                  name: \"data\",\n                  header: \"Data de criação\",\n                  render: item => (\n                    <DateTime value={item.created} format=\"DD/MM/YYYY\" />\n                  )\n                },\n                {\n                  name: \"lead time\",\n                  header: \"Lead Time Atual\",\n                  render: renderLeadTime\n                }\n              ]}\n            />\n          </VFlow>\n        </Cell>\n        <Cell size={2} />\n      </Grid>\n    </>\n  );\n};\n\nconst createStyles = (theme: Theme) => ({\n  container: {\n    textAlign: \"left\",\n\n    \"& > p\": {\n      fontSize: \"1rem\",\n      lineHeight: 2\n    }\n  } as CSSProperties\n});\n","import axios from \"axios\";\nimport { Cell, DataTable, Grid, VFlow } from \"bold-ui\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport { Projeto } from \"./Equipes\";\n\ntype Fechadas = {\n  id: number;\n  nome: string;\n  fechada: Date;\n  aberta: Date;\n};\ninterface FechadaProps {\n  projeto: Projeto;\n}\n\nexport const Fechadas = (props: FechadaProps) => {\n  const [fechadas, setFechadas] = useState<Fechadas[]>();\n\n  useEffect(() => {\n    axios.get(\"/fechadas\", { params: { id: props.projeto.id } }).then(resp => {\n      console.log(\"fechadas: \", resp.data.result.rows);\n      setFechadas(resp.data.result.rows);\n    });\n  }, [props.projeto]);\n\n  if (!props || !fechadas) {\n    return null;\n  }\n\n  const renderLeadTime = (row: Fechadas) => {\n    const date1 = moment(row.aberta);\n    const date2 = moment(row.fechada);\n    const diferenca = moment.duration(date2.diff(date1));\n    const days = diferenca.asDays();\n    return <span>{days}</span>;\n  };\n\n  // const data = [\n  //   fechadas.map(item => {\n  //     [item]\n  //   })\n  //   [\"Year\", \"Visitations\", { role: \"style\" }],\n  //   [\"2010\", 10, \"color: gray\"],\n  //   [\"2020\", 14, \"color: #76A7FA\"],\n  //   [\"2030\", 16, \"color: blue\"],\n  //   [\"2040\", 22, \"stroke-color: #703593; stroke-width: 4; fill-color: #C5A5CF\"],\n  //   [\n  //     \"2050\",\n  //     28,\n  //     \"stroke-color: #871B47; stroke-opacity: 0.6; stroke-width: 8; fill-color: #BC5679; fill-opacity: 0.2\"\n  //   ]\n  // ];\n\n  return (\n    <>\n      <Grid>\n        <Cell size={2} />\n        <Cell size={8}>\n          <VFlow>\n            <h2>Issues fechadas</h2>\n            <DataTable<Fechadas>\n              rows={fechadas}\n              columns={[\n                {\n                  name: \"issue\",\n                  header: \"#Issue\",\n                  render: item => item.id\n                },\n                {\n                  name: \"nome\",\n                  header: \"Título da Issue\",\n                  render: item => item.nome\n                },\n                {\n                  name: \"nome\",\n                  header: \"Lead Time\",\n                  render: renderLeadTime\n                }\n              ]}\n            />\n          </VFlow>\n        </Cell>\n        <Cell size={2} />\n      </Grid>\n      {/* <Chart chartType=\"BarChart\" width=\"100%\" height=\"400px\" data={data} /> */}\n    </>\n  );\n};\n","import axios from \"axios\";\nimport { Cell, DataTable, DateField, Grid, HFlow, VFlow } from \"bold-ui\";\nimport { TableColumnConfig } from \"bold-ui/lib/components/Table/DataTable/DataTable\";\nimport React, { useEffect, useState } from \"react\";\nimport { Abertas } from \"./Abertas\";\nimport { Projeto } from \"./Equipes\";\nimport { Fechadas } from \"./Fechadas\";\n\ntype Coluna = {\n  nome: string;\n};\n\ntype Icp = {\n  coluna: string;\n  count: number;\n};\n\ninterface ColunaProps {\n  projeto: Projeto;\n}\n\ninterface Periodo {\n  dataInicio: string;\n  dataFim: string;\n}\n\nexport const Colunas = (props: ColunaProps) => {\n  const [coluna, setColuna] = useState<Coluna[]>();\n\n  const [icp, setIcp] = useState<Icp[]>();\n\n  const [periodo, setPeriodo] = useState<Periodo>({\n    dataInicio: \"09/09/2019\",\n    dataFim: \"16/09/2019\"\n  });\n\n  useEffect(() => {\n    axios\n      .get(\"/col\", {\n        params: {\n          id: props.projeto.id\n        }\n      })\n      .then(resp => {\n        console.log(\"resp\", resp.data.result.rows);\n        setColuna(resp.data.result.rows);\n      });\n    axios\n      .get(\"/ipc\", {\n        params: {\n          id: props.projeto.id,\n          dataInicio: periodo.dataInicio,\n          dataFim: periodo.dataFim\n        }\n      })\n      .then(resp => {\n        console.log(\"ipc: \", resp.data);\n        setIcp(resp.data.result.rows);\n      });\n  }, [props.projeto, periodo.dataInicio, periodo.dataFim]);\n\n  if (!props || !coluna || !coluna[0] || !icp) {\n    return null;\n  }\n\n  let cols: [TableColumnConfig] = [\n    {\n      name: \"\",\n      header: \"\",\n      render: () => <span></span>\n    }\n  ];\n  let c = [\n    {\n      name: \"\",\n      header: \"\",\n      render: () => <span></span>\n    },\n    {\n      name: \"\",\n      header: \"\",\n      render: () => <span></span>\n    },\n    ...cols\n  ];\n\n  c[0] = {\n    name: \"Data Início\",\n    header: \"Data Início\",\n    render: a => periodo.dataInicio\n  };\n  c[1] = {\n    name: \"Data Fim\",\n    header: \"Data Fim\",\n    render: a => periodo.dataFim\n  };\n\n  coluna.forEach((item, index) => {\n    c[index + 2] = {\n      name: item.nome,\n      header: item.nome,\n      render: a => <span>{a.get(item.nome)}</span>\n    };\n  });\n\n  const renderIssue = () => {\n    let issues = new Map();\n    coluna.map(item => issues.set(item.nome, countIssue(item.nome)));\n    console.log(issues);\n    return issues;\n  };\n\n  const countIssue = (name: string) => {\n    var col = icp.filter(x => x.coluna === name);\n    if (col.length === 0) {\n      return 0;\n    }\n    return col[0].count;\n  };\n\n  const handleChangeDataInicio = (selectedDate: Date) => {\n    setPeriodo({\n      dataInicio: new Intl.DateTimeFormat(\"pt-BR\", {\n        day: \"2-digit\",\n        month: \"numeric\",\n        year: \"numeric\"\n      }).format(selectedDate),\n      dataFim: periodo.dataFim\n    });\n  };\n\n  const handleChangeDataFim = (selectedDate: Date) =>\n    setPeriodo({\n      dataInicio: periodo.dataInicio,\n      dataFim: new Intl.DateTimeFormat(\"pt-BR\", {\n        day: \"2-digit\",\n        month: \"numeric\",\n        year: \"numeric\"\n      }).format(selectedDate)\n    });\n\n  return (\n    <>\n      <VFlow>\n        <Grid>\n          <Cell size={2} />\n          <Cell size={8}>\n            <VFlow>\n              <HFlow>\n                <DateField\n                  label=\"Data Início\"\n                  name=\"inicio\"\n                  //value={new Date(periodo.dataInicio)}\n                  onChange={handleChangeDataInicio}\n                />\n                <DateField\n                  label=\"Data Fim\"\n                  name=\"fim\"\n                  //value={new Date(periodo.dataFim)}\n                  onChange={handleChangeDataFim}\n                />\n              </HFlow>\n              <DataTable rows={[renderIssue()]} columns={c} />\n            </VFlow>\n          </Cell>\n          <Cell size={2} />\n        </Grid>\n        <Abertas projeto={props.projeto} />\n        <Fechadas projeto={props.projeto} />\n      </VFlow>\n    </>\n  );\n};\n\nexport default Colunas;\n","import axios from \"axios\";\nimport { Cell, Grid, Select, VFlow } from \"bold-ui\";\nimport React, { useEffect, useState } from \"react\";\nimport Colunas from \"./Colunas\";\n\nexport type Projeto = {\n  id: string;\n  nome: string;\n};\n\nexport default function Equipes() {\n  const [projetos, setProjetos] = useState<Projeto[]>();\n  const [statusSelecionado, setstatusSelecionado] = useState<Projeto>();\n\n  useEffect(() => {\n    axios.get(\"/kkk\").then(resp => {\n      setProjetos(resp.data.res.rows);\n    });\n  }, []);\n\n  if (!projetos) {\n    return null;\n  }\n\n  const itemToString = (item: Projeto | null) => {\n    if (!item) return \"\";\n    return item.nome;\n  };\n  const handleOnChange = (item: Projeto) => {\n    setstatusSelecionado(item);\n  };\n\n  return (\n    <>\n      <VFlow>\n        <Grid>\n          <Cell size={2} />\n          <Cell size={8}>\n            <Select<Projeto>\n              items={projetos}\n              label=\"Selecione a equipe ágil\"\n              onChange={handleOnChange}\n              itemToString={itemToString}\n              name=\"equipes\"\n              clearable={false}\n            />\n          </Cell>\n          <Cell size={2} />\n        </Grid>\n        {statusSelecionado && <Colunas projeto={statusSelecionado} />}\n      </VFlow>\n    </>\n  );\n}\n","import { Cell, Grid, VFlow } from \"bold-ui\";\nimport React from \"react\";\n\nexport default function Header() {\n  return (\n    <>\n      <VFlow>\n        <br></br>\n        <Grid>\n          <Cell size={1} />\n          <h1>AppIssue_</h1>\n        </Grid>\n        <hr></hr>\n      </VFlow>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./views/App.tsx\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n","import { ThemeProvider } from \"bold-ui\";\nimport React from \"react\";\nimport Equipes from \"./Equipes\";\nimport Header from \"./Header\";\n\nexport default function App() {\n  return (\n    <>\n      <ThemeProvider>\n        <Header />\n        <Equipes />\n      </ThemeProvider>\n    </>\n  );\n}\n"],"sourceRoot":""}